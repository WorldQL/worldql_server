name: Build
on:
  push:
    branches:
      - trunk
    tags:
      - v*
  pull_request:

jobs:
  build_x86:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-x86-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-x86-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-x86-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo build --release
      - name: Strip binary
        run: strip target/release/worldql_server
      - name: Upload binary
        if: startsWith(github.ref, 'refs/tags/') == false
        uses: actions/upload-artifact@v1
        with:
          name: worldql_server_${{ matrix.platform }}_x86
          path: target/release/worldql_server
      - name: Extract Release Version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        shell: bash
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - name: Rename Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: mv target/release/worldql_server target/release/worldql_server_${{ matrix.platform }}_x86
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: WorldQL v${{ steps.get_version.outputs.version }}
          files: target/release/worldql_server_${{ matrix.platform }}_x86
          generate_release_notes: true

  checks:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') == false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: checks-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: checks-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: checks-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Tests
        run: cargo test --all
      - name: Check for Clippy Warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check
