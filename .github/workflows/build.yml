name: Build
on:
  push:
    branches:
      - trunk
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_x86:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-x86-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-x86-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-x86-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo build --release
      - name: Strip binary
        run: strip target/release/worldql_server
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: worldql_server_${{ matrix.platform }}_x86
          path: target/release/worldql_server
  build_docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: checks-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: checks-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: checks-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Tests
        run: cargo test --all
      - name: Check for Clippy Warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check
